{"version":3,"sources":["Invitation/flowers.png","fire.js","Admin/SimplePopover.js","Admin/EnhancedTable.js","Admin/AddForm.js","Admin/Admin.js","Invitation/Envelope.js","Invitation/RSVP.js","Invitation/Letter.js","Invitation/Details.js","Invitation/Invitation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","SimplePopover","state","anchorEl","guestInvitedCount","plusOneInvitedCount","guestGoingCount","plusOneGoingCount","handleClick","event","count","_this","getCount","setState","currentTarget","handleClose","props","data","forEach","user","active","rsvp_status","guest_name","trim","guest_status","classes","this","open","Boolean","react_default","a","createElement","Button_default","aria-owns","undefined","aria-haspopup","variant","onClick","Popover_default","id","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography_default","className","typography","React","Component","withStyles","theme","margin","spacing","unit","desc","b","orderBy","rows","numeric","disablePadding","label","EnhancedTableHead","createSortHandler","property","onRequestSort","_this2","_this$props","onSelectAllClick","order","numSelected","rowCount","TableHead_default","TableRow_default","TableCell_default","padding","Checkbox_default","indeterminate","checked","onChange","map","row","key","sortDirection","Tooltip_default","title","placement","enterDelay","TableSortLabel_default","direction","EnhancedTableToolbar","Toolbar_default","classNames","root","Object","defineProperty","highlight","color","Admin_SimplePopover","spacer","actions","IconButton_default","aria-label","onDeleteGuest","Delete_default","paddingRight","palette","type","secondary","main","backgroundColor","lighten","light","text","primary","dark","flex","EnhancedTable","_this3","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createData","user_name","user_email","user_mobile","user_dietary","guest_mobile","url","counter","handleRequestSort","handleSelectAllClick","target","selected","n","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","value","handleDeleteGuest","newData","hash","split","pop","database","ref","update","isSelected","isInitialValueDone","Fire","_this4","boolToString","bool","createListofData","push","user_first_name","user_last_name","guest_first_name","guest_last_name","once","snap","child","val","on","_this5","_this$state","emptyRows","Math","min","Paper_default","EnhancedTable_EnhancedTableToolbar","tableWrapper","Table_default","table","aria-labelledby","EnhancedTable_EnhancedTableHead","TableBody_default","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","hover","role","aria-checked","tabIndex","component","scope","href","style","height","colSpan","TablePagination_default","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","width","marginTop","minWidth","overflowX","styles","paddingTop","paper","fullWidthButton","AddForm","index_es","container","alignContent","item","xs","TextField_default","name","newGuests","handleInput","fullWidth","multiline","handleAddGuests","disabled","centerText","textAlign","flexGrow","grow","Admin","handlePage","newPage","e","filter","guestData","newGuestObj","MD5","user_stage","app","Fragment","position","justify","Admin_AddForm","Admin_EnhancedTable","Envelope","Envelopes","handleStage","react_transition_group","transitionName","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","RSVP","placeholder","handleInputChange","htmlFor","RSVPConfirmation","Modal","setAppElement","Letter","modalIsOpen","openModal","afterOpenModal","closeModal","Letters","lib_default","isOpen","onAfterOpen","onRequestClose","Invitation_RSVP","Details","renderDetails","src","FlowerImage","alt","Invitation","envelopeToInvitation","setTimeout","invitationToDetails","location","pathname","isActive","new_user_stage","Invitation_Envelope","Invitation_Letter","Invitation_Details","App","Switch","Route","path","exact","window","hostname","match","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.625353c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flowers.fe598233.png\";","import firebase from 'firebase'\n\nvar config = {\n    apiKey: \"AIzaSyA_t6nWtQKF5urdTYtBs141zUHGEoWxVVk\",\n    authDomain: \"invite-me-please.firebaseapp.com\",\n    databaseURL: \"https://invite-me-please.firebaseio.com\",\n    projectId: \"invite-me-please\",\n    storageBucket: \"invite-me-please.appspot.com\",\n    messagingSenderId: \"925746814030\"\n};\n\nvar fire = firebase.initializeApp(config);\nexport default fire;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\n\nconst styles = theme => ({\n    typography: {\n        margin: theme.spacing.unit * 2,\n    },\n});\n\nclass SimplePopover extends React.Component {\n    state = {\n        anchorEl: null,\n        guestInvitedCount : 0,\n        plusOneInvitedCount : 0,\n        guestGoingCount : 0,\n        plusOneGoingCount : 0\n};\n\n    handleClick = event => {\n        const count = this.getCount();\n        this.setState({\n            anchorEl: event.currentTarget,\n            plusOneInvitedCount: count.plusOneInvitedCount,\n            guestGoingCount: count.guestGoingCount,\n            plusOneGoingCount: count.plusOneGoingCount\n        })\n    };\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null,\n        });\n    };\n\n    getCount = () => {\n        let plusOneInvitedCount = 0,\n            guestGoingCount = 0,\n            plusOneGoingCount = 0;\n\n        this.props.data.forEach((user)=>{\n            if(user.active) {\n                if(user.rsvp_status===\"True\"){\n                    guestGoingCount++;\n                }\n                if(user.guest_name.trim()!==\"\"){\n                    plusOneInvitedCount++;\n                }\n                if(user.guest_status===\"True\"){\n                    plusOneGoingCount++;\n                }\n            }\n        });\n\n        return {\n            plusOneInvitedCount: plusOneInvitedCount,\n            guestGoingCount: guestGoingCount,\n            plusOneGoingCount: plusOneGoingCount\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div>\n                <Button\n                    aria-owns={open ? 'simple-popper' : undefined}\n                    aria-haspopup=\"true\"\n                    variant=\"contained\"\n                    onClick={this.handleClick}\n                >\n                    Get Count\n                </Button>\n                <Popover\n                    id=\"simple-popper\"\n                    open={open}\n                    anchorEl={anchorEl}\n                    onClose={this.handleClose}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                >\n                    <Typography className={classes.typography}>\n                        # Guests Invited: {this.props.guestInvitedCount}\n                        <br/>\n                        # Guests Going: {this.state.guestGoingCount}\n                        <br/>\n                        # Plus Ones Invited: {this.state.plusOneInvitedCount}\n                        <br/>\n                        # Plus Ones Going: {this.state.plusOneGoingCount}\n                    </Typography>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nSimplePopover.propTypes = {\n    classes: PropTypes.object.isRequired,\n    data: PropTypes.array.isRequired,\n    guestInvitedCount: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(SimplePopover);","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nimport Fire from '../fire.js';\nimport 'firebase/database';\nimport SimplePopover from './SimplePopover';\n\n\nfunction desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\n\nfunction stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [\n    { id: 'user_name', numeric: false, disablePadding: true, label: 'Full Name' },\n    { id: 'rsvp_status', numeric: false, disablePadding: false, label: 'RSVP Status' },\n    { id: 'user_email', numeric: false, disablePadding: false, label: 'Email' },\n    { id: 'user_mobile', numeric: false, disablePadding: false, label: 'Mobile' },\n    { id: 'user_dietary', numeric: false, disablePadding: false, label: 'Dietary Restrictions' },\n    { id: 'guest_name', numeric: false, disablePadding: false, label: 'Plus One'},\n    { id: 'guest_status', numeric: false, disablePadding: false, label: 'Plus One Status'},\n    { id: 'guest_mobile', numeric: false, disablePadding: false, label: 'Plus One Mobile'},\n    { id: 'url', numeric: false, disablePadding: false, label: 'URL'}\n];\n\nclass EnhancedTableHead extends React.Component {\n    createSortHandler = property => event => {\n        this.props.onRequestSort(event, property);\n    };\n\n    render() {\n        const { onSelectAllClick, order, orderBy, numSelected, rowCount } = this.props;\n\n        return (\n            <TableHead>\n                <TableRow>\n                    <TableCell padding=\"checkbox\">\n                        <Checkbox\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\n                            checked={numSelected === rowCount}\n                            onChange={onSelectAllClick}\n                        />\n                    </TableCell>\n                    {rows.map(row => {\n                        return (\n                            <TableCell\n                                key={row.id}\n                                numeric={row.numeric}\n                                padding={row.disablePadding ? 'none' : 'default'}\n                                sortDirection={orderBy === row.id ? order : false}\n                            >\n                                <Tooltip\n                                    title=\"Sort\"\n                                    placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                                    enterDelay={300}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy === row.id}\n                                        direction={order}\n                                        onClick={this.createSortHandler(row.id)}\n                                    >\n                                        {row.label}\n                                    </TableSortLabel>\n                                </Tooltip>\n                            </TableCell>\n                        );\n                    }, this)}\n\n                </TableRow>\n            </TableHead>\n        );\n    }\n}\n\nEnhancedTableHead.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.string.isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired\n};\n\nconst toolbarStyles = theme => ({\n    root: {\n        paddingRight: theme.spacing.unit,\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    spacer: {\n        flex: '1 1 100%',\n    },\n    actions: {\n        color: theme.palette.text.secondary,\n    },\n    title: {\n        flex: '0 0 auto',\n    },\n});\n\nlet EnhancedTableToolbar = props => {\n    const { numSelected, classes } = props;\n\n    return (\n        <Toolbar\n            className={classNames(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            <div className={classes.title}>\n                {numSelected > 0 ? (\n                    <Typography color=\"inherit\" variant=\"subtitle1\">\n                        {numSelected} selected\n                    </Typography>\n                ) : (\n                    <SimplePopover\n                        data = {props.data}\n                        guestInvitedCount = {props.guestInvitedCount}\n                    />\n                )}\n            </div>\n            <div className={classes.spacer} />\n            <div className={classes.actions}>\n                {numSelected > 0 && (\n                    <Tooltip title=\"Delete\">\n                        <IconButton aria-label=\"Delete\" onClick={props.onDeleteGuest}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </Tooltip>\n                )}\n            </div>\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    data: PropTypes.array.isRequired,\n    guestInvitedCount: PropTypes.number.isRequired\n};\n\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n    },\n    table: {\n        minWidth: 1020,\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n    },\n});\n\nclass EnhancedTable extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            order: 'asc',\n            orderBy: 'user_name',\n            selected: [],\n            guestInvitedCount: 0,\n            data: [],\n            page: 0,\n            rowsPerPage: 10,\n            isInitialValueDone : false\n        };\n\n        this.counter = 0;\n        this.database = Fire.database();\n    }\n\n    componentDidMount(){\n\n        let boolToString = (bool) => bool ? \"True\" : \"False\";\n\n        let createListofData = (user, newData) => {\n            if(user.active){\n                newData.push(this.createData(\n                    user.user_first_name + ' ' + user.user_last_name,\n                    boolToString(user.rsvp_status),\n                    user.user_email,\n                    user.user_mobile,\n                    user.user_dietary,\n                    user.guest_first_name + ' ' +user.guest_last_name,\n                    boolToString(user.guest_status),\n                    user.guest_mobile,\n                    user.url,\n                    user.active\n                ));\n            }\n        };\n\n        this.database.ref('/users/').once('value', (snap)=> {\n            let newData = this.state.data.slice();\n\n            snap.forEach(function(child) {\n                const user =  child.val();\n                createListofData(user, newData);\n            });\n            this.setState({\n                data: newData,\n                guestInvitedCount: newData.length,\n                isInitialValueDone: true\n            });\n        });\n\n        this.database.ref('/users/').on('child_added', snap => {\n            if(this.state.isInitialValueDone){\n                let newData = this.state.data.slice();\n                const user =  snap.val();\n                createListofData(user, newData);\n                this.setState({\n                    data: newData,\n                    guestInvitedCount: newData.length\n                });\n            }\n\n        });\n\n    }\n\n    createData = (user_name, rsvp_status, user_email, user_mobile, user_dietary, guest_name, guest_status, guest_mobile, url, active) => {\n        this.counter+=1;\n        return { id: this.counter, user_name, rsvp_status, user_email, user_mobile, user_dietary, guest_name, guest_status, guest_mobile, url, active};\n    };\n\n    handleRequestSort = (event, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (this.state.orderBy === property && this.state.order === 'desc') {\n            order = 'asc';\n        }\n\n        this.setState({ order, orderBy });\n    };\n\n    handleSelectAllClick = event => {\n        if (event.target.checked) {\n            this.setState(state => ({ selected: state.data.map(n => n.id) }));\n            return;\n        }\n        this.setState({ selected: [] });\n    };\n\n    handleClick = (event, id) => {\n        const { selected } = this.state;\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        this.setState({ selected: newSelected });\n    };\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n\n    handleDeleteGuest = () => {\n\n        let newData = this.state.data.slice();\n        let guestInvitedCount = this.state.guestInvitedCount;\n        this.state.selected.forEach((id)=>{\n\n            const user = this.state.data[id-1];\n\n            const hash = user.url.split('Invitation/').pop();\n            this.database.ref('/users/'+hash).update({\n                active: false\n            });\n\n            newData[id-1].active = false;\n            guestInvitedCount--;\n        });\n\n\n        this.setState({\n            data: newData,\n            guestInvitedCount: guestInvitedCount,\n            selected: []\n        });\n\n    };\n\n    isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n    render() {\n        const { classes } = this.props;\n        const { data, order, orderBy, selected, rowsPerPage, page, guestInvitedCount} = this.state;\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, guestInvitedCount - page * rowsPerPage);\n\n        return (\n            <Paper className={classes.root}>\n                <EnhancedTableToolbar\n                    numSelected={selected.length}\n                    onDeleteGuest = {this.handleDeleteGuest}\n                    data = {this.state.data}\n                    guestInvitedCount = {guestInvitedCount}\n                />\n                <div className={classes.tableWrapper}>\n                    <Table className={classes.table} aria-labelledby=\"tableTitle\">\n                        <EnhancedTableHead\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={this.handleSelectAllClick}\n                            onRequestSort={this.handleRequestSort}\n                            rowCount={guestInvitedCount}\n                        />\n                        <TableBody>\n                            {stableSort(data, getSorting(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map(n => {\n                                    const isSelected = this.isSelected(n.id);\n                                    if(n.active){\n                                        return (\n                                            <TableRow\n                                                hover\n                                                onClick={event => this.handleClick(event, n.id)}\n                                                role=\"checkbox\"\n                                                aria-checked={isSelected}\n                                                tabIndex={-1}\n                                                key={n.id}\n                                                selected={isSelected}\n                                            >\n                                                <TableCell padding=\"checkbox\">\n                                                    <Checkbox checked={isSelected} />\n                                                </TableCell>\n                                                <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                                                    {n.user_name}\n                                                </TableCell>\n                                                <TableCell>{n.rsvp_status}</TableCell>\n                                                <TableCell>{n.user_email}</TableCell>\n                                                <TableCell>{n.user_mobile}</TableCell>\n                                                <TableCell>{n.user_dietary}</TableCell>\n                                                <TableCell>{n.guest_name}</TableCell>\n                                                <TableCell>{n.guest_status}</TableCell>\n                                                <TableCell>{n.guest_mobile}</TableCell>\n                                                <TableCell><a href={n.url}>{n.url}</a></TableCell>\n                                            </TableRow>\n                                        );\n                                    }\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 49 * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </div>\n                <TablePagination\n                    component=\"div\"\n                    count={guestInvitedCount}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </Paper>\n        );\n    }\n}\n\nEnhancedTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(EnhancedTable);","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nimport {\n        Paper,\n        Typography,\n        Grid,\n    } from '@material-ui/core/';\n\nconst styles = {\n    root: {\n        paddingTop: \"30px\"\n    },\n    paper: {\n      padding:\"50px\"\n    },\n    fullWidthButton: {\n        width: \"100%\"\n    }\n}\n\nconst AddForm = (props) => {\n    return (\n        <div style={styles.root}>\n            <Paper style ={styles.paper}>\n                <Grid container alignContent={'space-between'} spacing={32}>\n                    <Grid item xs={6}>\n                        <TextField\n                            name=\"newGuests\"\n                            value={props.newGuests}\n                            onChange={props.handleInput}\n                            fullWidth\n                            multiline\n                            rows={'10'}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Typography variant={'body1'}>\n                            To add a guest and his/her plus one, follow this template:\n                            <br/>\n                            <code>guest_first_name,guest_last_name,plus_one_first_name,plus_one_last_name</code>\n                            <br/>\n                            <br/>\n                            Followed by a line break for each guest.\n                            <br/>\n                            White space does not matter. If the guest has no plus one, just do 1 comma.\n                            <br/>\n                            <br/>\n                            Example: <br/>\n                            <code>Mary,Smith,John,Smith</code>\n                            <br/>\n                            <code>Sang Jun,Bak</code>\n                        </Typography>\n\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            styles={styles.fullWidthButton}\n                            onClick={props.handleAddGuests}\n                            disabled = {!props.newGuests}\n                        >Add Guests</Button>\n                    </Grid>\n\n\n                </Grid>\n\n\n            </Paper>\n        </div>\n    );\n};\n\nexport default AddForm;\n\n","import React, {Component} from 'react';\n\nimport {\n        Grid,\n        AppBar,\n        Toolbar,\n        Typography,\n        Button } from '@material-ui/core';\nimport EnhancedTable from './EnhancedTable.js';\nimport AddForm from './AddForm.js';\nimport MD5 from 'md5';\nimport Fire from '../fire.js';\nimport 'firebase/database';\n\n\nconst styles = {\n    centerText: {\n        textAlign: \"center\"\n    },\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n};\n\nclass Admin extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state={\n            newGuests: \"\",\n            page: \"guestStatus\"\n        };\n\n        this.app = Fire;\n        this.database = this.app.database().ref('/users/');\n    }\n\n    handlePage = (newPage) => {\n        this.setState({page: newPage});\n    };\n\n\n    handleInput = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    handleAddGuests = () => {\n\n        const newGuests =\n            this.state.newGuests\n                .split('\\n')\n                    .filter(val => (val.trim() !== \"\"))\n                    .map((val)=> {\n                        const guestData = val.split(',');\n                        let newGuestObj = {};\n                        guestData[0] ? (newGuestObj[\"user_first_name\"] = guestData[0]) : (newGuestObj[\"user_first_name\"] = \"\");\n                        guestData[1] ? (newGuestObj[\"user_last_name\"] = guestData[1]) : (newGuestObj[\"user_last_name\"] = \"\");\n                        guestData[2] ? (newGuestObj[\"guest_first_name\"] = guestData[2]) : (newGuestObj[\"guest_first_name\"] = \"\");\n                        guestData[3] ? (newGuestObj[\"guest_last_name\"] = guestData[3]) : (newGuestObj[\"guest_last_name\"] = \"\");\n                        return newGuestObj;\n                    });\n\n        this.setState({\n            newGuests: \"\"\n        });\n\n        newGuests.forEach((user)=>{\n            const hash = MD5(`hash ${user.user_first_name} ${user.user_last_name}`);\n            const url = 'https://invite-me-please.firebaseapp.com/Invitation/'+hash;\n            this.database.update({\n                [hash]: {\n                    url: url,\n                    user_first_name: user.user_first_name,\n                    user_last_name: user.user_last_name,\n                    guest_first_name: user.guest_first_name,\n                    guest_last_name: user.guest_last_name,\n\n                    user_stage: \"Envelope\",\n                    guest_mobile: \"\",\n                    guest_status: false,\n                    user_email: \"\",\n                    user_dietary: \"\",\n                    user_mobile: \"\",\n                    rsvp_status: false,\n                    active: true\n\n\n\n                }\n            });\n\n        });\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\n                            Admin Dashboard\n                        </Typography>\n                        <Button color=\"inherit\" onClick = {()=> this.handlePage(\"guestStatus\")}>Guest Status</Button>\n                        <Button color=\"inherit\" onClick = {()=> this.handlePage(\"guestAdd\")}>Add Guests</Button>\n                    </Toolbar>\n                </AppBar>\n\n                <Grid container justify='center'>\n                    {this.state.page === \"guestAdd\" &&\n                        <Grid item xs={11}>\n                            <AddForm\n                                newGuests={this.state.newGuests}\n                                handleInput={this.handleInput}\n                                handleAddGuests={this.handleAddGuests}\n                            />\n                        </Grid>\n                    }\n                    {this.state.page === \"guestStatus\" &&\n                        <Grid item xs={12}>\n                            <EnhancedTable/>\n                        </Grid>\n                    }\n\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\n\n\nexport default Admin;\n","import React from 'react';\nimport './Invitation.css';\nimport { CSSTransitionGroup } from 'react-transition-group'\n\nconst Envelope = (props) => {\n\n    const guests = () => (props.guest_first_name && props.guest_last_name) ? (`and ${props.guest_first_name} ${props.guest_last_name}`) : \"\";\n\n\n    const Envelopes = props.Envelopes.map((val) => (\n        <div key = {val} className='Envelope' onClick = {props.handleStage}>\n            <h5>To: {props.user_first_name} {props.user_last_name} {guests()}</h5>\n        </div>\n    ));\n\n    return (\n        <CSSTransitionGroup\n            transitionName=\"fade\"\n            transitionAppear={true}\n            transitionAppearTimeout={500}\n            transitionEnterTimeout={500}\n            transitionLeaveTimeout={500}>\n            {Envelopes}\n        </CSSTransitionGroup>\n    );\n};\n\nexport default Envelope;\n","import React from 'react';\nimport './Form.css'\n/*\nguest\nguest_mobile:\n    guest_status:\n        rsvp_status:\n            user_email:\n                user_first_name:\n                    user_id:\n                        user_last_name:\n                            user_mobile:\n                                user_stage:\n                                    user_url:\n                                    */\nconst RSVP = (props) => {\n    return (\n        <div className=\"RSVP\">\n            <div className=\"card-form\">\n                <form className=\"signup\">\n                    <div className=\"form-title\">RSVP</div>\n                    <div className=\"form-body\">\n                        <div className=\"row header\">\n                            <h2>\n                                Personal Information\n                            </h2>\n                        </div>\n                        <div className=\"rule\"></div>\n                        <br/>\n                        <div className=\"row\">\n                            <input\n                                name=\"user_email\"\n                                value={props.user_email}\n                                type=\"email\"\n                                placeholder=\"Email Address*\"\n                                onChange = {props.handleInputChange}/>\n                        </div>\n                        <div className=\"row\">\n                            <input\n                                name = \"user_mobile\"\n                                value={props.user_mobile}\n                                type=\"text\"\n                                placeholder=\"Phone Number*\"\n                                onChange = {props.handleInputChange}/>\n                        </div>\n                        <div className=\"row\">\n                            <textarea\n                                name = \"user_dietary\"\n                                value={props.user_dietary}\n                                placeholder=\"Dietary Restrictions/Allergies\"\n                                onChange = {props.handleInputChange}/>\n                        </div>\n                        {\n                            (props.guest_first_name.trim() !== \"\" && props.guest_last_name.trim() !== \"\") && (\n                            <div>\n                                <div className=\"checkbox_row\">\n                                <input\n                                    name = \"guest_status\"\n                                    value={props.guest_status}\n                                    checked={props.guest_status}\n                                    type=\"checkbox\"\n                                    className=\"form-checkbox\"\n                                    id=\"check-one\"\n                                    onChange = {props.handleInputChange}/>\n                                <label htmlFor=\"check-one\">Plus One?</label>\n                                </div>\n                                <br/>\n                                {\n                                    props.guest_status &&\n                                    <div className=\"row\">\n                                        <input\n                                            name = \"guest_mobile\"\n                                            value={props.guest_mobile}\n                                            type=\"text\"\n                                            placeholder=\"Guest's Phone Number\"\n                                            onChange = {props.handleInputChange}/>\n                                    </div>\n                                }\n                            </div>\n\n                            )\n                        }\n                    </div>\n                    <div className=\"form-footer\">\n                        <a onClick={props.RSVPConfirmation}>Confirm<span className=\"fa fa-thumbs-o-up\"></span></a>\n                    </div>\n\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default RSVP;\n","import React from 'react';\nimport './Invitation.css';\nimport RSVP from './RSVP';\nimport Modal from 'react-modal';\nimport { CSSTransitionGroup } from 'react-transition-group'\n\nModal.setAppElement('#root');\n\nclass Letter extends React.Component {\n\n\n    state = {\n        modalIsOpen: false\n    };\n\n    openModal = () => {\n        this.setState({modalIsOpen: true});\n    };\n\n    afterOpenModal = () => {\n    };\n\n    closeModal = () => {\n        this.setState({modalIsOpen: false});\n    };\n\n    RSVPConfirmation = () => {\n        this.closeModal();\n        this.props.handleStage();\n    };\n\nrender() {\n\n        const Letters = this.props.Letters.map((val) => (\n            <div key = {val} className='Letter-Container'>\n                <div className=\"bottomHalf\">\n                    <p className=\"primary greeting small\">Help Us Celebrate</p>\n                    <p className=\"primary title big\">\n                        SangWon & SooMin's\n                        <br/>\n                        Wedding\n                    </p>\n                    <p className=\"secondary time small\">\n                        Saturday, March 23rd, 2019\n                        <br/>\n                        4pm - 1am\n                    </p>\n                    <p className=\"primary address small\">\n                        Carmen’s Banquet Centre\n                        <br/>\n                        1520 Stone Church Rd E.\n                        <br/>\n                        Hamilton, ON\n                    </p>\n                    <button className=\"button\" onClick={this.openModal}>RSVP</button>\n                </div>\n            </div>\n        ));\n\n        return (\n            <CSSTransitionGroup\n                transitionName=\"fade\"\n                transitionEnterTimeout={900}\n                transitionLeaveTimeout={500}\n            >\n                <Modal\n                    isOpen={this.state.modalIsOpen}\n                    onAfterOpen={this.afterOpenModal}\n                    onRequestClose={this.closeModal}\n                    className=\"modal\"\n                >\n                    <RSVP\n                        handleInputChange = {this.props.handleInputChange}\n                        RSVPConfirmation = {this.RSVPConfirmation}\n                        guest_first_name = {this.props.guest_first_name}\n                        guest_last_name = {this.props.guest_last_name}\n                        guest_mobile = {this.props.guest_mobile}\n                        guest_status = {this.props.guest_status}\n                        user_email = {this.props.user_email}\n                        user_mobile = {this.props.user_mobile}\n                        user_dietary = {this.props.user_dietary}/>\n                </Modal>\n                {Letters}\n            </CSSTransitionGroup>\n        );\n    }\n}\n\nexport default Letter;\n","import React from 'react';\nimport FlowerImage from './flowers.png';\nimport { CSSTransitionGroup } from 'react-transition-group'\n\nconst Details = (props) => {\n\n    const renderDetails = props.Details.map( (val) => (\n        <div className='Details-Container' key={val}>\n            <h1>O p e n&nbsp;&nbsp;&nbsp;B a r</h1>\n            <hr/>\n            <p className=\"secondary time small\">\n                Saturday, March 23rd, 2019\n                <br/>\n                4pm - 1am\n            </p>\n            <p className=\"primary address small\">\n                Carmen’s Banquet Centre\n                <br/>\n                1520 Stone Church Rd E.\n                <br/>\n                Hamilton, ON\n            </p>\n\n            <img src={FlowerImage} className=\"flowers\" alt=\"\"/>\n            <div className=\"details\">\n                <h3 className=\"secondary subtitle\"><u>Hotel Details</u></h3>\n\n                <p>\n                    Best Western Premier C Hotel\n                    <br/>\n                    1530 Stone Church Rd E, Hamilton\n                    <br/>\n                    <br/>\n                    Call (905) 381-9898 and ask for Ellen and Sangwon's wedding for a discounted price.\n\n                </p>\n            </div>\n\n            <div className=\"schedule\">\n                <h3 className=\"secondary subtitle\"><u>Schedule</u></h3>\n                <p>Ceremony: 4pm-5pm</p>\n                <p>Reception: 5pm-1am</p>\n            </div>\n            <div className=\"clear\"/>\n            <div className = \"footer small secondary\">\n                For any information changes or inquiries, please contact Sangwon.bak@gmail.com\n            </div>\n        </div>\n    ));\n\n    return (\n        <CSSTransitionGroup\n            transitionName=\"fade\"\n            transitionAppear={true}\n            transitionAppearTimeout={500}\n            transitionEnterTimeout={500}\n            transitionLeaveTimeout={500}>\n            {renderDetails}\n        </CSSTransitionGroup>\n    );\n};\n\nexport default Details;\n","import React, {Component} from 'react';\nimport Envelope from './Envelope';\nimport Letter from './Letter';\nimport Details from './Details';\nimport Fire from '../fire.js';\nimport 'firebase/database';\nimport './Invitation.css'\n\nclass Invitation extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            guest_first_name: \"\",\n            guest_last_name: \"\",\n            guest_mobile: \"\",\n            guest_status: false,\n            rsvp_status: false,\n            user_email: \"\",\n            user_first_name: \"\",\n            user_last_name: \"\",\n            user_mobile: \"\",\n            user_stage: \"\",\n            user_dietary: \"\",\n            url: \"\",\n            Envelopes: [],\n            Letters: [],\n            Details: [],\n            hash: this.props.location.pathname.split('Invitation').pop()\n        };\n\n        this.database = Fire.database();\n    }\n\n    componentDidMount(){\n        const {hash} = this.state;\n\n        this.database.ref('/users/'+hash+'/active').on('value', (isActive) => {\n            if(isActive.val()){\n                this.database.ref('/users/'+hash).on('child_added', snap => {\n\n                    if(snap.key === \"user_stage\"){\n                        const new_user_stage = snap.val()+'s';\n                        this.setState({\n                            [new_user_stage]: [\"\"]\n                        });\n                    }\n                    this.setState({\n                        [snap.key]: snap.val()\n                    });\n                });\n            }\n        });\n\n    }\n\n    handleInputChange = (e) => {\n        const target = e.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    };\n    \n    envelopeToInvitation = () => {\n\n        this.setState({\n            Envelopes: [],\n        }, ()=>{\n            const new_user_stage = \"Letter\";\n            setTimeout( () => {\n                this.setState({\n                    user_stage: new_user_stage,\n                    Letters: [\"\"]\n                });\n                // this.database.ref('/users/'+this.state.hash).update({\n                //     user_stage: new_user_stage\n                // });\n            }, 500);\n        });\n    };\n\n    invitationToDetails = () => {\n\n        this.setState({\n            Letters: [],\n        }, ()=>{\n            setTimeout( () => {\n                this.setState({\n                    user_stage: \"Details\",\n                    rsvp_status: true,\n                    Details: [\"\"]\n                });\n                this.database.ref('/users/'+this.state.hash).update({\n                    user_stage: \"Detail\",\n                    guest_mobile: this.state.guest_mobile,\n                    guest_status: this.state.guest_status,\n                    user_email: this.state.user_email,\n                    user_dietary: this.state.user_dietary,\n                    user_mobile: this.state.user_mobile,\n                    rsvp_status: true\n                });\n\n            }, 500);\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"Invitation\">\n                <Envelope\n                    Envelopes = {this.state.Envelopes}\n                    user_first_name = {this.state.user_first_name}\n                    user_last_name = {this.state.user_last_name}\n                    guest_first_name = {this.state.guest_first_name}\n                    guest_last_name = {this.state.guest_last_name}\n                    handleStage ={this.envelopeToInvitation}\n                />\n                <Letter\n                    Letters = {this.state.Letters}\n                    guest_first_name = {this.state.guest_first_name}\n                    guest_last_name = {this.state.guest_last_name}\n                    guest_mobile = {this.state.guest_mobile}\n                    guest_status = {this.state.guest_status}\n                    user_email = {this.state.user_email}\n                    user_mobile = {this.state.user_mobile}\n                    user_dietary = {this.state.user_dietary}\n                    handleStage ={this.invitationToDetails}\n                    handleInputChange = {this.handleInputChange} />\n                <Details\n                    Details = {this.state.Details}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Invitation;\n","import React, { Component } from 'react';\nimport './css/App.css';\nimport Admin from './Admin/Admin.js';\nimport {Route, Switch } from 'react-router-dom'\n\nimport Invitation from \"./Invitation/Invitation\";\n\nclass App extends Component {\n\n  render() {\n    return (\n        <Switch>\n            <Route path='/Invitation/' component={Invitation}/>\n            <Route exact path='/Admin' component={Admin}/>\n        </Switch>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}